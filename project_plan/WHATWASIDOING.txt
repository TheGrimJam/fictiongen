Webpack is being a bit of a ballache, although the python project itself works okay it would be good to figure out why webpack is being a bit of a bastard and then follow up by making an automated process that runs both the webpack install and django in one.

If nothing else this would be pretty pleasing for future django projects, and then may be worth applying as a template.


So the styling is in an okay place at the moment, and since I've committed to react may as well start 
furnishing some methods.

In general we probably want to pull in a blob of text at all times, and we can just divide by full stops on the 
front end since that is the markov delimiter we are using ( and I don't see that changing ). I can't really look
into whether or not that will cause hassle when it comes to ellipses or somesuch right at this moment.



FE:

API > Pull data > Divide into sentences > populate a sentence object

Sentence OBJ:
    line
    status
    visible
    DOM obj

Story OBJ: 
    remaining_sentences ( These have not been displayed, and are available for picking )
    removed_sentences ( unordered )
    placed_sentences ( ordered )
    active_sentence = Sentence OBJ

    clear():
        clear the text

    save():
        old fickgen code has some copy to clipboard code. Probably need to edit that to handle the fact
        it won't be one stream of text

    retrieve():
        We will run out of sentences and will need to grab more when it gets under a certain level 

    